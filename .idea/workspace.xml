<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b409524c-8667-4684-be72-0a22047a43d5" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_akka_akka_http_core_2_13_10_1_11_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_akka_akka_http_core_2_13_10_1_11_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_akka_akka_parsing_2_13_10_1_11_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_akka_akka_parsing_2_13_10_1_11_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_filters_helpers_2_13_2_8_0_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_filters_helpers_2_13_2_8_0_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_akka_http_server_2_13_2_8_0_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_akka_http_server_2_13_2_8_0_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_functional_2_13_2_8_1_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_functional_2_13_2_8_1_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_json_2_13_2_8_1_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_json_2_13_2_8_1_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_logback_2_13_2_8_0_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_logback_2_13_2_8_0_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_server_2_13_2_8_0_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_server_2_13_2_8_0_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_test_2_13_2_8_0_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_play_play_test_2_13_2_8_0_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__net_java_dev_jna_jna_5_9_0_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__net_java_dev_jna_jna_5_9_0_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__org_jline_jline_3_21_0_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_jline_jline_3_21_0_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_modules_scala_parser_combinators_2_13_1_1_2_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_modules_scala_parser_combinators_2_13_1_1_2_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_modules_scala_xml_2_13_1_2_0_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_modules_scala_xml_2_13_1_2_0_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_scala_compiler_2_13_8_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_scala_compiler_2_13_8_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_scala_library_2_13_8_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_scala_library_2_13_8_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_scala_reflect_2_13_8_jar.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_scala_reflect_2_13_8_jar.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules/gitHub-ex-build.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/gitHub-ex-build.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules/gitHub-ex.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/gitHub-ex.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.sbt" beforeDir="false" afterPath="$PROJECT_DIR$/build.sbt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$3258bed6764caaea9bcd$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$3258bed6764caaea9bcd.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$3258bed6764caaea9bcd.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$83bb87e8e0a7939e6f93$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$83bb87e8e0a7939e6f93.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$83bb87e8e0a7939e6f93.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$947deab72a2a83351c4e$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$947deab72a2a83351c4e.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$947deab72a2a83351c4e.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$cbfaab7f11b1b0e439de$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$cbfaab7f11b1b0e439de.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/project/target/config-classes/$cbfaab7f11b1b0e439de.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$13702018066c33493066$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$13702018066c33493066.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$13702018066c33493066.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$24d0577258e7787770f4$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$24d0577258e7787770f4.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$24d0577258e7787770f4.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$8b63ddcc77d250d39a2e$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$8b63ddcc77d250d39a2e.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$8b63ddcc77d250d39a2e.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$e1aa532f7a84f825f704$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$e1aa532f7a84f825f704.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$e1aa532f7a84f825f704.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$e4755e890488dba6b925$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$e4755e890488dba6b925.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$e4755e890488dba6b925.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$fd5e982706672a1c7cb2$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$fd5e982706672a1c7cb2.cache" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/config-classes/$fd5e982706672a1c7cb2.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/scala-2.12/sbt-1.0/update/update_cache_2.12/inputs" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/scala-2.12/sbt-1.0/update/update_cache_2.12/inputs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/scala-2.12/sbt-1.0/update/update_cache_2.12/output" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/scala-2.12/sbt-1.0/update/update_cache_2.12/output" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/_global/dependencyPositions/_global/streams/update_cache_2.12/output_dsp" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/_global/dependencyPositions/_global/streams/update_cache_2.12/output_dsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/_global/update/_global/streams/out" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/_global/update/_global/streams/out" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/compile/_global/_global/compileOutputs/previous" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/compile/_global/_global/compileOutputs/previous" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/compile/exportedProducts/_global/streams/export" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/compile/exportedProducts/_global/streams/export" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/runtime/dependencyClasspath/_global/streams/export" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/runtime/dependencyClasspath/_global/streams/export" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/runtime/exportedProducts/_global/streams/export" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/runtime/exportedProducts/_global/streams/export" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/runtime/fullClasspath/_global/streams/export" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/runtime/fullClasspath/_global/streams/export" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project/target/streams/runtime/internalDependencyClasspath/_global/streams/export" beforeDir="false" afterPath="$PROJECT_DIR$/project/target/streams/runtime/internalDependencyClasspath/_global/streams/export" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/controllers/ReverseApplicationController.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/controllers/ReverseAssets.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/controllers/ReverseHomeController.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/controllers/javascript/ReverseApplicationController.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/controllers/javascript/ReverseAssets.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/controllers/javascript/ReverseHomeController.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/controllers/routes$javascript.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/controllers/routes.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/router/Routes$$anonfun$routes$1.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/router/Routes.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/router/RoutesPrefix$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/router/RoutesPrefix.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/file$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/file.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/foldersAndFiles$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/foldersAndFiles.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/index$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/index.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/main$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/main.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/repoInfo$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/repoInfo.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/repositories$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/repositories.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/user$.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/classes/views/html/user.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/target/scala-2.13/update/update_cache_2.13/output" beforeDir="false" afterPath="$PROJECT_DIR$/target/scala-2.13/update/update_cache_2.13/output" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/_global/_global/checkBuildSources/_global/inputFileStamps/previous" beforeDir="false" afterPath="$PROJECT_DIR$/target/streams/_global/_global/checkBuildSources/_global/inputFileStamps/previous" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/_global/dependencyPositions/_global/streams/update_cache_2.13/output_dsp" beforeDir="false" afterPath="$PROJECT_DIR$/target/streams/_global/dependencyPositions/_global/streams/update_cache_2.13/output_dsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/streams/_global/updateClassifiers/_global/streams/update_cache_2.13/output" beforeDir="false" afterPath="$PROJECT_DIR$/target/streams/_global/updateClassifiers/_global/streams/update_cache_2.13/output" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/baseSpec/BaseSpec.scala" beforeDir="false" afterPath="$PROJECT_DIR$/test/baseSpec/BaseSpec.scala" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Scala Class" />
        <option value="HTML File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="2BKpMCyLN2NE1twoyRgkEGEvVSU" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/robyn.garlington/Documents/scalaTraining/assignments/gHub-example/notWorkingGitHub-ex&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;
  }
}</component>
  <component name="RunManager" selected="ScalaTest.ApplicationConnectorSpec.ApplicationConnector .get() should return a user from the api">
    <configuration name="ApplicationConnectorSpec.ApplicationConnector .get() should return a user from the api" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="gitHub-ex" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="connectors.ApplicationConnectorSpec" />
      <option name="testName" value="ApplicationConnector .get() should return a user from the api" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UnitApplicationControllerSpec.ApplicationController() .downloadTar() should correct login but no repository exists" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="gitHub-ex" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="controllers.UnitApplicationControllerSpec" />
      <option name="testName" value="ApplicationController() .downloadTar() should correct login but no repository exists" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UnitApplicationControllerSpec.ApplicationController() .downloadTar() should download the tar of the repository specified form the branch specified" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="gitHub-ex" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="controllers.UnitApplicationControllerSpec" />
      <option name="testName" value="ApplicationController() .downloadTar() should download the tar of the repository specified form the branch specified" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UnitApplicationControllerSpec.ApplicationController() .downloadZip() should correct login but no repository exists" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="gitHub-ex" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="controllers.UnitApplicationControllerSpec" />
      <option name="testName" value="ApplicationController() .downloadZip() should correct login but no repository exists" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UnitApplicationControllerSpec.ApplicationController() .downloadZip() should download the tar of the repository specified form the branch specified" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="gitHub-ex" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="controllers.UnitApplicationControllerSpec" />
      <option name="testName" value="ApplicationController() .downloadZip() should download the tar of the repository specified form the branch specified" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.ApplicationConnectorSpec.ApplicationConnector .get() should return a user from the api" />
        <item itemvalue="ScalaTest.UnitApplicationControllerSpec.ApplicationController() .downloadZip() should correct login but no repository exists" />
        <item itemvalue="ScalaTest.UnitApplicationControllerSpec.ApplicationController() .downloadZip() should download the tar of the repository specified form the branch specified" />
        <item itemvalue="ScalaTest.UnitApplicationControllerSpec.ApplicationController() .downloadTar() should correct login but no repository exists" />
        <item itemvalue="ScalaTest.UnitApplicationControllerSpec.ApplicationController() .downloadTar() should download the tar of the repository specified form the branch specified" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b409524c-8667-4684-be72-0a22047a43d5" name="Changes" comment="" />
      <created>1656664580931</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1656664580931</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>