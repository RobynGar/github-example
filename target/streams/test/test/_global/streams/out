[0m[[0m[0mdebug[0m] [0m[0mjavaOptions: Vector()[0m
[0m[[0m[0mdebug[0m] [0m[0mForking tests - parallelism = false[0m
[0m[[0m[0mdebug[0m] [0m[0mCreate a single-thread test executor[0m
[0m[[0m[0mdebug[0m] [0m[0mRunner for org.scalatest.tools.Framework produced 4 initial tasks for 4 tests.[0m
[0m[[0m[0mdebug[0m] [0m[0m  Running TaskDef(controllers.UnitApplicationControllerSpec, sbt.ForkMain$SubclassFingerscan@7132834c, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mUnitApplicationControllerSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController unit test .index[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return when there are no users[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return all users in the database[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController unit test .create()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should create a user in the database[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should try to create a user in the database with wrong format[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController unit test .read()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should find a user in the database by login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should cannot find a user in the database as login does not exist[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController unit test .update()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should find a user in the database by login and update all fields[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should try update a user by an login that does not exist and in a non-conforming format[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController unit test .delete()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should find a user in the database by login and delete[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should cannot find a user in the database as login does not exist do not delete[0m[0m
[0m[[0m[0mdebug[0m] [0m[0m    Produced 0 nested tasks and 10 events.[0m
[0m[[0m[0mdebug[0m] [0m[0m  Running TaskDef(controllers.HomeControllerSpec, sbt.ForkMain$SubclassFingerscan@4f420ce2, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mHomeControllerSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mHomeController GET[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should render the index page from a new instance of controller[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should render the index page from the application[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should render the index page from the router[0m[0m
[0m[[0m[0mdebug[0m] [0m[0m    Produced 0 nested tasks and 3 events.[0m
[0m[[0m[0mdebug[0m] [0m[0m  Running TaskDef(controllers.ApplicationControllerSpec, sbt.ForkMain$SubclassFingerscan@e5ed75b, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationControllerSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .index[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return when there are no users[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should return all users in the database *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  List() was not equal to List(User(test,now,Some(test location),2,0)) (ApplicationControllerSpec.scala:67)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return json from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .create()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should create a user in the database[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should try to create a user in the database with wrong format[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return json from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .read()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should find a user in the database by login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should cannot find a user in the database as login does not exist[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return json from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .update()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should find a user in the database by login and update all fields[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should try update a user by an login that does not exist and in a non-conforming format[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return json from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .delete()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should find a user in the database by login and delete[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should cannot find a user in the database as login does not exist do not delete[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should return accepted status from the router *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  400 was not equal to 202 (ApplicationControllerSpec.scala:236)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .readFromAPI()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use username/login to find user from api and return that user[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unknown username/login used to find user from api cannot return that user[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .addFromAPI()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use username/login to find user from api and return that user[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unknown username/login used to find user from api cannot return that user[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .showUser()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use username/login to find user from api and return that user[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use incorrect username/login return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should render the userPage from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to render the userPage incorrect username from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController .usersRepos()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should login to find user's repositories and return their names in list [0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use incorrect login return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use login for user with no repositories, return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should render the repositories page from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to render the repositories Page due to incorrect username from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController() .usersRepoInfo()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should login to find user's repositories under the name specified and return info about that repo [0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use incorrect login return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use login for user with no repositories, return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should render the repoInfo page from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to render the repositories Page due to incorrect username from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController() .repoContent()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should login to find user's repositories under the name specified and return info about that repo [0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use incorrect login return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use login for user with no repositories, return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should render the repoInfo page from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to render the repositories Page due to incorrect username from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController() .dirContent()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should login to find user's repositories under the name specified and return folders and files form that repo [0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use incorrect login return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use login for user with no repositories, return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should render the foldersAndFiles page from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to render the foldersAndFiles Page due to incorrect username from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController() .fileContent()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should login to find user's repositories under the name specified and return folders and files form that repo [0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use incorrect login return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should use login for user with no repositories, return api error[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should render the foldersAndFiles page from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to render the foldersAndFiles Page due to incorrect username from the router[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationController() .createFile()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should login to find user's repositories under the name specified and create files *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  400 was not equal to 200 (ApplicationControllerSpec.scala:617)[0m[0m
[0m[[0m[0mdebug[0m] [0m[0m    Produced 0 nested tasks and 49 events.[0m
[0m[[0m[0mdebug[0m] [0m[0m  Running TaskDef(service.ApplicationServiceUnitSpec, sbt.ForkMain$SubclassFingerscan@783f4fdb, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationServiceUnitSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .index[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return when there are no users[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return sequence of users when there are users[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService() .create()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should should add user to mongodb[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should could not validate user so should not add to mongodb or call create[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to create a user as with validate user format but login already exists[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .read()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a user by login/username[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should does not return a user as incorrect login/username[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .update()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return an updated user[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to updated a user as cannot validate user format[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to updated a user as with validate user format but non-existing login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .delete()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a string upon deleting a user by login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a error upon unsuccessfully trying to delete a user by login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .getUser()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a user by login for github api[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to return a user from api, incorrect login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .getUsersRepo()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a user repositories names in list [0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to return a user's repositories names from api, incorrect login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .getUsersRepoInfo()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a users information by login for github api[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to return a user information from api, incorrect login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .getRepoContent()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a user repositories content by login for github api[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to return a user repositories content from api, incorrect login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .getDirContent()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a user's repository folder contents by login for github api[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to return a user's repository folder content from api, incorrect login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .getFileContent()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a user's repository folder contents by login for github api[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to return a user's repository folder content from api, incorrect login[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mApplicationService .addApiUser()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should add a user from github api to mongodb[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should unable to return a user from api, incorrect login[0m[0m
[0m[[0m[0mdebug[0m] [0m[0m    Produced 0 nested tasks and 26 events.[0m
[0m[[0m[0mdebug[0m] [0m[0mRunner for com.novocode.junit.JUnitFramework produced 0 initial tasks for 0 tests.[0m
[0m[[0m[0minfo[0m] [0m[0mScalaTest[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 14 seconds, 926 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 88[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 4, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 85, failed 3, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 3 TESTS FAILED ***[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSummary for JUnit not available.[0m
[0m[[0m[31merror[0m] [0m[0mFailed: Total 88, Failed 3, Errors 0, Passed 85[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	controllers.UnitApplicationControllerSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	controllers.HomeControllerSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	service.ApplicationServiceUnitSpec[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	controllers.ApplicationControllerSpec[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
